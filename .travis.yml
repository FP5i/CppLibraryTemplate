language: cpp

sudo: true

notifications:
  email:
    on_success: never
    on_failure: always

env:
  # For everyone in the matrix
  global:
    # Conan package
    # We need to set CONAN_PASSWORD in the Repository Settings
    # Note that it has to be the API key, not the profile password
    # Build related
    - CXXFLAGS="-Wall -Wextra -Werror"
    - CMAKE_FLAGS="-DCMAKE_BUILD_TYPE=Debug -DBUILD_EXAMPLES=ON -DBUILD_TESTS=ON"

stages:
  - test
  - deploy

matrix:
  include:
  # Stage: Test
  # Linux, GCC8
  - os: linux
    dist: xenial
    stage: test
    name: "Tests - Linux, GCC8"
    compiler: gcc
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test', 'deadsnakes']
        packages: ['g++-8', 'python3.6']
    env: COMPILER=g++-8
    before_script:
      - pip install --user conan
  # Linux, Clang8
  - os: linux
    dist: xenial
    stage: test
    name: "Tests - Linux, Clang8"
    compiler: clang
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test', 'llvm-toolchain-xenial-8', 'deadsnakes']
        packages: ['g++-8', 'clang-8', 'python3.6']
    env:
      - COMPILER=clang++-8
      - CXXFLAGS="${CXXFLAGS} -stdlib=libstdc++"
    before_script:
      - pip install --user conan
  # TODO: Fix, need Python3.6
  # OSX, Clang
  #- os: osx
  #  osx_image: xcode10
  #  compiler: clang
  #  env: COMPILER=clang++
  #  before_script:
  #    - pip install --user conan
  # Linux, GCC8, coverage
  - os: linux
    dist: xenial
    stage: test
    name: "Coverage - Linux, GCC8, Coveralls"
    compiler: gcc
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test', 'deadsnakes']
        packages: ['g++-8', 'python3.6']
    env:
      - COMPILER=g++-8
      - CMAKE_FLAGS="${CMAKE_FLAGS} -DCOVERAGE=ON"
    before_script:
      - pip install --user conan
      - pip install --user cpp-coveralls
    after_success:
      - coveralls --gcov gcov-8 --gcov-options '\-lp' --root ${TRAVIS_BUILD_DIR} --build-root ${TRAVIS_BUILD_DIR}/build --extension cpp --extension hpp --exclude deps --exclude tests --exclude examples --include single_include
  # Linux, Clang8, clang-tidy
  - os: linux
    dist: xenial
    stage: test
    name: "Analysis - Linux, Clang8, Clang-Tidy"
    compiler: clang
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test', 'llvm-toolchain-xenial-8', 'deadsnakes']
        packages: ['g++-8', 'clang-8', clang-tidy-8, 'python3.6']
    env:
      - COMPILER=clang++-8
      - CXXFLAGS="${CXXFLAGS} -stdlib=libstdc++"
      - CMAKE_FLAGS="${CMAKE_FLAGS} -DTIDY_CHECK=ON"
    before_script:
      - pip install --user conan
    # Test
    after_script:
      - find /usr -name 'clang-8*' -type d
      # Run tidy
    #  - make clang_tidy
  # Linux, Conan release
  - os: linux
    dist: xenial
    stage: deploy
    name: "Delpoyment - Conan"
    sudo: required
    language: python
    python: "3.6"
    services:
      - docker
    env:
      - CONAN_GCC_VERSIONS=8
      - CONAN_DOCKER_IMAGE=conanio/gcc8
      # Override flags
      - CMAKE_FLAGS="-DCMAKE_BUILD_TYPE=Release -DDEPLOY_CONAN=ON"
    install:
      - pip install -U conan_package_tools conan
    script:
      - cmake ${CMAKE_FLAGS} .
      - make -j 4

install:
  - python --version
  - cmake --version
  - export CXX=${COMPILER}
  - echo ${CXX}
  - ${CXX} --version
  - ${CXX} -v

script:
  - cd build
  # Generate and build
  # TODO: Why CMAKE_BUILD_TYPE=Release kill the debug flags?
  - cmake ${CMAKE_FLAGS} -DCMAKE_CXX_FLAGS="${CXXFLAGS}" ..
  - make -j 4
  # Run tests
  - CTEST_OUTPUT_ON_FAILURE=1
  - ctest -j 4
