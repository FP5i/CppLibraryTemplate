language: cpp

sudo: false

notifications:
  email:
    on_success: never
    on_failure: always

matrix:
  include:
  # Linux, GCC8
  - os: linux
    compiler: gcc
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: ['g++-8']
    env: COMPILER=g++-8
  # Linux, Clang8
  - os: linux
    compiler: clang
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test', 'llvm-toolchain-trusty-8.0']
        packages: ['g++-8', 'clang-8.0']
    env: COMPILER=clang++-8.0
  # OSX, Clang
  - os: osx
    osx_image: xcode10
    compiler: clang
    env: COMPILER=clang++
  # Linux, GCC8, coverage
  - os: linux
    compiler: gcc
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: ['g++-8']
    env:
      - COMPILER=g++-8
      # CMake automatically imports this as C++ flags
      - CXXFLAGS="-O0 -g --coverage -fno-inline -fno-inline-small-functions -fno-default-inline"
    before_script:
      - pip install --user cpp-coveralls
    after_success:
      - coveralls --gcov gcov-8 --gcov-options '\-lp' --root ${TRAVIS_BUILD_DIR} --build-root ${TRAVIS_BUILD_DIR}/build --extension cpp --extension hpp --exclude deps --include src

install:
  - cmake --version
  - export CXX=${COMPILER}
  - echo ${CXX}
  - ${CXX} --version
  - ${CXX} -v

script:
  - mkdir -p build && cd build
  # Generate and build
  - cmake -DCMAKE_BUILD_TYPE=Release ..
  - make -j 4
  # Run tests
  - CTEST_OUTPUT_ON_FAILURE=1
  - ctest -j 4
